% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limiric.R
\name{limiric}
\alias{limiric}
\title{limiric}
\arguments{
\item{project_name}{String with project or sample name}

\item{filtered_path}{Directory of filtered alignment output}

\item{seurat_input}{Seurat object to be used as input over raw files. Default NULL}

\item{min_cells}{In how many cells should a gene be expressed to be kept}

\item{soupx}{Perform ambient RNA correction, if TRUE raw_path must be given. Default is FALSE}

\item{raw_path}{Directory of unfiltered alignment output}

\item{droplet_qc}{Verify output with droplet_qc, if TRUE velocyto_path must be given. Default is FALSE}

\item{velocyto_path}{Directory of Veocyto filtered alignment output}

\item{filter_rbc}{Whether or not red blood cells should be removed. Default is TRUE}

\item{isolate_cd45}{Discard non-immune cells. Default is FALSE}

\item{filter_output}{Should output contain no damaged cells. Default is TRUE}

\item{output_path}{Directory where limiric output should be generated}

\item{organism}{"Hsap" if human sample or "Mmus" if mouse sample}

\item{sample_list}{Input multiple samples in list. Default is FALSE}
}
\value{
(list) Output storing the final \strong{Seurat} object
}
\description{
Function that takes as input filtered scRNA-seq alignment output (or a \strong{Seurat} object)
and identifies damaged cells present within the sample according to
low dimension mitochondrial and ribosomal clustering.
}
\examples{
\dontrun{
## 1. Basic usage

# Detect damaged cells in a single sample using
# the filtered alignment files

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    filtered_path = "/home/user/alignment/SRR1234567/filtered/",
    output_path   = "/home/user/alignment/limiric/"
)


## 2. Perform ambient RNA correction prior to damaged cell detection

# Detect damaged cells after performing ambient RNA correction

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    filtered_path = "/home/user/alignment/SRR1234567/filtered/",
    soupx        = TRUE,
    raw_path      = "/home/user/alignment/SRR1234567/raw/",
    output_path   = "/home/user/alignment/limiric/"
)


## 3. First isolate the immune cells present in the sample
# then identify damaged cells

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    filtered_path = "/home/user/alignment/SRR1234567/filtered/",
    isolate_cd45  = TRUE,
    output_path   = "/home/user/alignment/limiric/"
)


## 4. Combine limiric damaged cell annotations with droplet_qc

# Detect damaged cells and compare results with those from droplet_qc

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    filtered_path = "/home/user/alignment/SRR1234567/filtered/",
    droplet_qc    = TRUE,
    velocyto_path = "/home/user/alignment/velocyto/",
    output_path   = "/home/user/alignment/limiric/"
)


## 5. Combine the previous four conditions

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    filtered_path = "/home/user/alignment/SRR1234567/filtered/",
    soupx        = TRUE,
    raw_path      = "/home/user/alignment/SRR1234567/raw/",
    droplet_qc    = TRUE,
    isolate_cd45  = TRUE,
    velocyto_path = "/home/user/alignment/velocyto/",
    output_path   = "/home/user/alignment/limiric/"
)


## 6. Conditions exactly as for 5
# but multiple samples are being run instead of just one

sample_list <- list(

    list(project_name  = "SRR1234567",
         filtered_path = "/home/user/alignment/SRR1234567/filtered/",
         soupx        = TRUE,
         raw_path      = "/home/user/alignment/SRR1234567/raw/",
         droplet_qc    = TRUE,
         isolate_cd45  = TRUE,
         velocyto_path = "/home/user/alignment/velocyto/",
         output_path   = "/home/user/alignment/limiric/"),

    list(project_name  = "SRR1234568",
         filtered_path = "/home/user/alignment/SRR1234568/filtered/",
         soupx        = TRUE,
         raw_path      = "/home/user/alignment/SRR1234568/raw/",
         droplet_qc    = TRUE,
         isolate_cd45  = TRUE,
         velocyto_path = "/home/user/alignment/velocyto/",
         output_path   = "/home/user/alignment/limiric/"),

    list(project_name  = "SRR1234569",
         filtered_path = "/home/user/alignment/SRR1234569/filtered/",
         soupx        = TRUE,
         raw_path      = "/home/user/alignment/SRR1234569/raw/",
         droplet_qc    = TRUE,
         isolate_cd45  = TRUE,
         velocyto_path = "/home/user/alignment/velocyto/",
         output_path   = "/home/user/alignment/limiric/")
)

GSE1234567 <- limiric(sample_list = sample_list)

## 7. Alternatively, use a Seurat object as input

SRR1234567 <- limiric(
    project_name  = "SRR1234567",
    seurat_input  = seurat_object,
    output_path   = "/home/user/alignment/limiric/"
)
}

}
