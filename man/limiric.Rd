% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limiric.R
\name{limiric}
\alias{limiric}
\title{limiric}
\arguments{
\item{ProjectName}{String with project or sample name}

\item{FilteredPath}{Directory of filtered alignment output}

\item{SeuratInput}{Seurat object to be used as input over raw files. Default NULL}

\item{MinCells}{In how many cells should a gene be expressed to be kept}

\item{SoupX}{Perform ambient RNA correction, if TRUE RawPath must be given. Default is FALSE}

\item{RawPath}{Directory of unfiltered alignment output}

\item{DropletQC}{Verify output with DropletQC, if TRUE VelocytoPath must be given. Default is FALSE}

\item{VelocytoPath}{Directory of Veocyto filtered alignment output}

\item{FilterRBC}{Whether or not red blood cells should be removed. Default is TRUE}

\item{IsolateCD45}{Discard non-immune cells. Default is FALSE}

\item{FilterOutput}{Should output contain no damaged cells. Default is TRUE}

\item{OutputPath}{Directory where limiric output should be generated}

\item{Organism}{"Hsap" if human sample or "Mmus" if mouse sample}

\item{sample_list}{Input multiple samples in list. Default is FALSE}
}
\value{
(list) Output storing the final \strong{Seurat} object
}
\description{
Function that takes as input filtered scRNA-seq alignment output (or a \strong{Seurat} object)
and identifies damaged cells present within the sample according to
low dimension mitochondrial and ribosomal clustering.
}
\examples{
\dontrun{
## 1. Basic usage

# Detect damaged cells in a single sample using
# the filtered alignment files

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 2. Perform ambient RNA correction prior to damaged cell detection

# Detect damaged cells after performing ambient RNA correction

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    SoupX        = TRUE,
    RawPath      = "/home/user/alignment/SRR1234567/raw/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 3. First isolate the immune cells present in the sample
# then identify damaged cells

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    IsolateCD45  = TRUE,
    OutputPath   = "/home/user/alignment/limiric/"
)


## 4. Combine limiric damaged cell annotations with DropletQC

# Detect damaged cells and compare results with those from DropletQC

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    DropletQC    = TRUE,
    VelocytoPath = "/home/user/alignment/velocyto/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 5. Combine the previous four conditions

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    SoupX        = TRUE,
    RawPath      = "/home/user/alignment/SRR1234567/raw/",
    DropletQC    = TRUE,
    IsolateCD45  = TRUE,
    VelocytoPath = "/home/user/alignment/velocyto/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 6. Conditions exactly as for 5
# but multiple samples are being run instead of just one

sample_list <- list(

    list(ProjectName  = "SRR1234567",
         FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234567/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/"),

    list(ProjectName  = "SRR1234568",
         FilteredPath = "/home/user/alignment/SRR1234568/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234568/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/"),

    list(ProjectName  = "SRR1234569",
         FilteredPath = "/home/user/alignment/SRR1234569/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234569/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/")
)

GSE1234567 <- limiric(sample_list = sample_list)

## 7. Alternatively, use a Seurat object as input

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    SeuratInput  = seurat_object,
    OutputPath   = "/home/user/alignment/limiric/"
)
}

}
