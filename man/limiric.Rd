% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/limiric.R
\name{limiric}
\alias{limiric}
\title{limiric}
\usage{
limiric(
  ProjectName = NULL,
  FilteredPath = NULL,
  SeuratInput = NULL,
  MinCells = NULL,
  SoupX = NULL,
  RawPath = NULL,
  DropletQC = NULL,
  VelocytoPath = NULL,
  FilterRBC = NULL,
  IsolateCD45 = NULL,
  FilterOutput = NULL,
  OutputPath = NULL,
  Organism = NULL,
  sample_list = NULL
)
}
\arguments{
\item{ProjectName}{\emph{character}    Name of the project or sample being analysed}

\item{FilteredPath}{\emph{character}    Directory of filtered, gzipped, alignment output containing matrix.mtx.gz, features.tsv.gz, and barcodes.tsv.gz}

\item{SeuratInput}{\emph{Seurat object}    Seurat object to be used as input instead of alignment output}

\item{MinCells}{\emph{numeric}    In how many cells should a gene be expressed to be retained in the count matrix}

\item{SoupX}{\emph{logical}    Whether or not ambient RNA correction should be performed, if TRUE RawPath must be given}

\item{RawPath}{\emph{character}    Directory of unfiltered, gzipped, alignment output containing matrix.mtx.gz, features.tsv.gz, and barcodes.tsv.gz}

\item{DropletQC}{\emph{logical}    Whether or not limiric annotations should be intersected with DropletQC damaged cell annotations, if TRUE VelocytoPath must be given}

\item{VelocytoPath}{\emph{character}    Directory of Veocyto filtered, gzipped, alignment output containing spliced.mtx.gz, unspliced.mtx.gz, features.tsv.gz, and barcodes.tsv.gz}

\item{FilterRBC}{\emph{logical}    Whether or not red blood cells should be removed}

\item{IsolateCD45}{\emph{logical}    Whether or not immune cells should be isolated}

\item{FilterOutput}{\emph{logical}    Whether or not output should filter out damaged cells}

\item{OutputPath}{\emph{character}    Directory where limiric output is generated}

\item{Organism}{\emph{character}    Either "Hsap" if human sample or "Mmus" if mouse}

\item{sample_list}{\emph{list}    If more than one sample is to be processed, create a list with the above parameters and enter it here. If one sample, leave NULL.}
}
\value{
(list) Output list storing the final \strong{Seurat} object
}
\description{
Function that takes as input filtered scRNA-seq alignment output (or a \strong{Seurat} object)
and identifies damaged cells present within the sample according to
low dimension mitochondrial and ribosomal clustering.
}
\examples{
\dontrun{
## 1. Basic usage

# Detect damaged cells in a single sample using
# the filtered alignment files

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 2. Perform ambient RNA correction prior to damaged cell detection

# Detect damaged cells after performing ambient RNA correction

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    SoupX        = TRUE,
    RawPath      = "/home/user/alignment/SRR1234567/raw/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 3. First isolate the immune cells present in the sample
# then identify damaged cells

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    IsolateCD45  = TRUE,
    OutputPath   = "/home/user/alignment/limiric/"
)


## 4. Combine limiric damaged cell annotations with DropletQC

# Detect damaged cells and compare results with those from DropletQC

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    DropletQC    = TRUE,
    VelocytoPath = "/home/user/alignment/velocyto/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 5. Combine the previous four conditions

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
    SoupX        = TRUE,
    RawPath      = "/home/user/alignment/SRR1234567/raw/",
    DropletQC    = TRUE,
    IsolateCD45  = TRUE,
    VelocytoPath = "/home/user/alignment/velocyto/",
    OutputPath   = "/home/user/alignment/limiric/"
)


## 6. Conditions exactly as for 5
# but multiple samples are being run instead of just one

sample_list <- list(

    list(ProjectName  = "SRR1234567",
         FilteredPath = "/home/user/alignment/SRR1234567/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234567/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/"),

    list(ProjectName  = "SRR1234568",
         FilteredPath = "/home/user/alignment/SRR1234568/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234568/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/"),

    list(ProjectName  = "SRR1234569",
         FilteredPath = "/home/user/alignment/SRR1234569/filtered/",
         SoupX        = TRUE,
         RawPath      = "/home/user/alignment/SRR1234569/raw/",
         DropletQC    = TRUE,
         IsolateCD45  = TRUE,
         VelocytoPath = "/home/user/alignment/velocyto/",
         OutputPath   = "/home/user/alignment/limiric/")
)

GSE1234567 <- limiric(sample_list = sample_list)

## 7. Alternatively, use a Seurat object as input

SRR1234567 <- limiric(
    ProjectName  = "SRR1234567",
    SeuratInput  = seurat_object,
    OutputPath   = "/home/user/alignment/limiric/"
)
}

}
